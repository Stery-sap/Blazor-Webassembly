@page "/register"
@using System.ComponentModel.DataAnnotations
<h3>Event Registration</h3>
<EditForm Model="@registerModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Full Name:</label>
        <InputText @bind-Value="registerModel.FullName" class="form-control" />
        <ValidationMessage For="@(() => registerModel.FullName)" />
    </div>

    <div class="form-group">
        <label>Email:</label>
        <InputText @bind-Value="registerModel.Email" type="email" class="form-control" />
        <ValidationMessage For="@(() => registerModel.Email)" />
    </div>

    <div class="form-group">
        <label>Password:</label>
        <InputText @bind-Value="registerModel.Password" type="@passwordInputType" class="form-control" />
        <ValidationMessage For="@(() => registerModel.Password)" />
        <div>
            <input type="checkbox" @bind="showPassword" /> Show Password
        </div>
    </div>

    <div class="form-group">
        <label>Confirm Password:</label>
        <InputText @bind-Value="registerModel.ConfirmPassword" type="@passwordInputType" class="form-control" />
        <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
    </div>

    <div class="form-group">
        <input type="checkbox" @bind="isHuman" /> I'm not a robot
        @if (!isHuman && isSubmitting)
        {
            <div class="text-danger">Please confirm you're not a robot.</div>
        }
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@if (isRegistered)
{
    <p class="text-success">Registration successful!</p>
}

@code {
    private RegisterModel registerModel = new();
    private bool isRegistered = false;
    private bool showPassword = false;
    private bool isHuman = false;
    private bool isSubmitting = false;

    private string passwordInputType => showPassword ? "text" : "password";

    // TogglePasswordVisibility method removed as @bind handles the change event for showPassword.

    private void HandleValidSubmit()
    {
        isSubmitting = true;

        if (!isHuman)
            return;

        // Simulate saving to backend
        isRegistered = true;
        isHuman = false;
        registerModel = new();
        isSubmitting = false;
    }

    public class RegisterModel
    {
        [Required(ErrorMessage = "Full Name is required")]
        public string FullName { get; set; }

        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Enter a valid email address")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required")]
        [MinLength(6, ErrorMessage = "Password must be at least 6 characters")]
        public string Password { get; set; }

        [Compare("Password", ErrorMessage = "Passwords do not match")]
        public string ConfirmPassword { get; set; }
    }
}