@page "/login"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation
@inject UserSessionService SessionService
<h3>Login</h3>
<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Username:</label>
        <InputText @bind-Value="loginModel.Username" class="form-control" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>

    <div class="form-group">
        <label>Password:</label>
        <InputText @bind-Value="loginModel.Password" type="password" class="form-control" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <button class="btn btn-primary" type="submit">Login</button>
</EditForm>

@if (!string.IsNullOrEmpty(loginError))
{
    <p class="text-danger">@loginError</p>
}

@code {
    private LoginModel loginModel = new();
    private string loginError;

    public class LoginModel
    {
        [Required]
        public string Username { get; set; }

        [Required]
        public string Password { get; set; }
    }

    private async Task HandleLogin()
    {
        // Simulated credential check (replace with real logic or API call)
        // Compare against fixed credentials
    if (loginModel.Username == "sap" && loginModel.Password == "sapparadise")
    {
        SessionService.StartSession("sap-id", "sap");
        Navigation.NavigateTo("/");
    }
    else
    {
        loginError = "Invalid credentials.";
    }

    }
}